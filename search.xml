<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OO第一单元作业——递归下降处理表达式</title>
      <link href="/2023/02/28/OO%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E4%B8%8B%E9%99%8D%E5%A4%84%E7%90%86%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/02/28/OO%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E4%B8%8B%E9%99%8D%E5%A4%84%E7%90%86%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>通过对表达式结构进行建模，完成多变量多项式的括号展开，初步体会层次化设计的思想。</p></blockquote><h2 id="第一次作业"><a href="#第一次作业" class="headerlink" title="第一次作业"></a>第一次作业</h2><h3 id="问题简述"><a href="#问题简述" class="headerlink" title="问题简述"></a>问题简述</h3><blockquote><p>读入一个包含加、减、乘、乘方以及括号（其中括号的深度<strong>至多为 1 层</strong>）的<strong>多变量</strong>表达式，输出<strong>恒等变形展开所有括号后</strong>的表达式。</p></blockquote><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p>我采用的是<strong>递归下降算法</strong>，先将表达式进行语法解析，再计算化简。根据课程提供的形式化表述，表达式解析为：</p><ul><li>Expr：表达式及表达式因子</li><li>Term：项</li><li>ExprPow：表达式及对于指数</li><li>Number：常数因子</li><li>Power：变量因子</li></ul><p>具体的类图如下：</p><p><em>怎么会加载不出来捏</em></p><h3 id="关键问题（难点"><a href="#关键问题（难点" class="headerlink" title="关键问题（难点)"></a>关键问题（难点)</h3><ol><li><p>如何处理空白字符及符号问题？</p><p>对于空白字符，由于本次作业不需要我们判断输入的合法性，所以对于输入的字符串 <code>input</code> ，直接过滤掉所有空白字符：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input = input.replaceAll(<span class="string">&quot;[ \t]&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>对于符号，我们注意到：①<strong>常数因子</strong>带符号；②在<strong>项</strong>的第一个因子前可以带一个正负号；③在<strong>表达式</strong>的第一项之前可以带一个正负号；④表达式中项与项之间的加减号。在出现符号的相应位置，如果是 <code>-</code>，就转化为项中的一个 $-1$ 的常数因子，例如 $-x&#x3D;-1*x$ ；如果是 <code>+</code>，忽略即可。同时我们也可以预处理连续的 <code>+-</code> 和 <code>*+</code> 等情况进行优化。</p></li><li><p>如何处理 <em>表达式因子 → ‘(‘ 表达式 ‘)’ [空白项 指数]</em> ？</p><p>我在Training给的模板的基础上新增了 <code>ExprPow</code> 类。在语法分析时，当项中读到了 <code>ExprPow</code> 类的因子，就把其展开为 $Expr<em>Expr</em>…*Expr$ 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExprPow</span> <span class="keyword">implements</span> <span class="title class_">Factor</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Expr baseExpr;</span><br><span class="line">    <span class="keyword">private</span> Integer exponent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如何计算及化简？</p><p>由于不存在嵌套括号，表达式即为 $A+B+…+Z$ （其中A, B, …, Z为项）的形式，可以先将项进行乘法展开，再进行加法。另外注意到化简完的式子均形如 $A<em>x**B</em>y<strong>C*z</strong>D$ (A, B, C, D 均为常数)，在进行乘法化简的时候只需要统计项中 A, B, C, D的值，在进行加法化简的时候可以考虑使用 <code>HashMap&lt;key, value&gt;</code>, <code>key</code>应为 x, y, z的指数的键值对，可应用 <code>key=(String)(B|C|D)</code> （这样可以避免重载HashMap的equals和hashcode方法）。</p></li><li><p>注意细节</p><p>例如，$0**0&#x3D;1$ ，其中，前者的 0 可以为满足题意的任意表达式因子化简后的结果。</p></li></ol><h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><p>对比最冗余的输出，可以考虑优化项为0，项的系数为1，变量的指数为0或1等的情形，以下主要说明相对不易考虑到的两点：</p><ol><li>由于表达式第一项的正负号可以省略，我们应尽量保证其为正的，此时我们可以考虑如果该项为负，就放到生成的字符串结果的末尾，如果为正，就放到生成的字符串结果的开头。然后判断字符串首字母是否为 &#96;+&#96;&#96;。</li><li><code>x*x</code> 比 <code>x**2</code> 更优。</li></ol><h3 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h3><p>到此，第一次作业分析结束。在自己的努力以及各路大佬提供的想法，尤其是Toby提供的评测姬，强测没问题并且互测没被Hack。</p><h2 id="第二次作业"><a href="#第二次作业" class="headerlink" title="第二次作业"></a>第二次作业</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>其实是写在前面的个人感触（<del>一堆废话</del>）。对于第二次作业，我在第一次作业的基础上进行了大幅度的修改，仅保留了第一次作业的语法分析。并且感觉本次作业写的比较冗余，可能不利于第三次迭代。个人建议是在写之前，列清楚每个类、属性、方法的用处，调用关系等，而不是边写边扩充（其实我的代码里有些都是可以合并的）。</p><h3 id="问题简述-1"><a href="#问题简述-1" class="headerlink" title="问题简述"></a>问题简述</h3><blockquote><p>在第一次作业要求的基础上，读入<strong>一系列自定义函数的定义</strong>以及一个包含幂函数、三角函数、自定义函数调用的<strong>表达式</strong>，输出<strong>恒等变形展开所有括号后</strong>的表达式。</p></blockquote><h3 id="整体架构-1"><a href="#整体架构-1" class="headerlink" title="整体架构"></a>整体架构</h3><p>本次我才用了 <strong>边分析边化简</strong> 的方法，比起第一次作业采用的先分析后化简明显是有利的。</p><h4 id="迭代内容"><a href="#迭代内容" class="headerlink" title="迭代内容"></a>迭代内容</h4><p>对于表达式解析，新增了 <code>Trigon</code> 类存储三角函数（然而我的 <code>Expr</code> , <code>ExprPow</code>, <code>Trigon</code> 类是可以合并的）。</p><p>新增了 <code>CusFuncProcess</code> 和 <code>CusFunction</code> 来处理自定义函数因子。</p><p>重载 <code>equals</code> 方法判断表达式是否相等，重载 <code>toString</code> 方法返回字符串。</p><p><strong>具体的类图如下：</strong></p><p><em>怎么会加载不出来捏</em></p><h3 id="关键问题（难点）"><a href="#关键问题（难点）" class="headerlink" title="关键问题（难点）"></a>关键问题（难点）</h3><p>在第一次作业的基础上迭代，主要考虑以下问题：</p><ol><li><p>括号嵌套处理</p><p>修改了计算化简部分的方法，处理上应该不会有太大问题。</p></li><li><p>三角函数处理</p><p>在语法分析时，三角函数因子的处理方式和其他因子相似。</p><p>在计算化简时，由于其独特的属性会带来一些不同，会在“性能优化”部分详细描述。</p></li><li><p>自定义函数调用</p><p>考虑到方法撰写的难度和时间、空间上的消耗，对于读入的自定义函数，先进行预处理：①对自定义函数用语法树分析一遍，再转为字符串；②将自定义函数中的形参按顺序用例如 <code>u</code> , <code>v</code> , <code>w</code> 等未出现的字母 <code>replaceAll</code> （原因请读者自己思考）。</p><p>当在所求的表达式中遇到自定义函数，将实参代入后再分析即可。这里值得注意的一点是<strong>在所求表达式中遇到形如</strong> $f(A, B, C)$ <strong>，如何取出实参</strong>？有多种做法，我采用的是用 <code>Parser</code> 取出实参 <code>exprA</code> , <code>exprB</code> , <code>exprC</code> ，再转化为字符串，代入自定义函数字符串。那么此时我们又会遇到一个问题：若<br>$$<br>1\<br>f(x)&#x3D;x*sin(x)\<br>f(y+sin(x))<br>$$<br>如果按上述方法，我们会得到 $y+sin(x)**2$ ，显然是有问题的。此时我们可以采用 <code>&quot;(&quot; + expr.toString() + &quot;)&quot;</code> 代入自定义函数字符串。</p></li></ol><h3 id="性能优化-1"><a href="#性能优化-1" class="headerlink" title="性能优化"></a>性能优化</h3><p>我们注意到最终表达式的每一项形如$ A<em>x**B</em>y<strong>C*z</strong>D*[sin(expr)**E][cos(expr)**F]$ ( $[]$ 表示这一项可以省略)。</p><ul><li>在 <code>multSimplify</code> 中，把每一项都化简成上述形式，其中三角函数的合并同类项需要判断 <code>expr</code> 是否相等（重载equals），如果相等指数相加（新开一个 <code>Trigon</code> 保存！！！）。</li><li>在 <code>addSimplify</code> 中，判断项与项是否相同（此处相同指除了系数 $A$ 外均相同），相同则 $A&#x3D;A_1+A_2$ ， 其余不变。</li><li>$sin(0)&#x3D;0, cos(0)&#x3D;1$</li><li>$sin(-A)&#x3D;-A, cos(-A)&#x3D;A$</li><li>三角函数<strong>对应的嵌套因子</strong>为<strong>不带指数的表达式因子</strong>时，该表达式因子两侧必要的一层括号；否则可省略。</li><li>表达式尽量保证首项是正的。</li></ul><p><em>如果发现写的有误或有更好的做法，欢迎到评论区指正或分享</em> (*^▽^*)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟机联不上网解决方法</title>
      <link href="/2023/02/28/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E4%B8%8D%E4%B8%8A%E7%BD%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/28/Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E4%B8%8D%E4%B8%8A%E7%BD%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><em>在用docker下cellift的时候校园网时不时地会崩掉，后来把校园网连回去，虚拟机也没有网，搞了半天才连回去，故在此想记录一下过程。</em></p><h2 id="Centos命令行上下翻页"><a href="#Centos命令行上下翻页" class="headerlink" title="Centos命令行上下翻页"></a>Centos命令行上下翻页</h2><p><em>写博客的时候本来想翻一下刚刚的操作记录，结果发现不会翻页，进行了一番搜索和咨询大佬。</em></p><p>​由于笔记本键盘中<code>PgUp</code> 和 <code>↑</code> 键合并在一起，所以不能直接用 <code>shift</code> + <code>PgUp</code>，而应该用 <code>shift</code> + <code>Fn</code> +  <code>PgUp</code> 。</p><h2 id="Linux虚拟机网络连接"><a href="#Linux虚拟机网络连接" class="headerlink" title="Linux虚拟机网络连接"></a>Linux虚拟机网络连接</h2><p><em>以下基于NAT网络连接模式（虚拟机 -&gt; 网络适配器 -&gt; 网络连接NAT模式）</em></p><h3 id="查看网络连接是否正常"><a href="#查看网络连接是否正常" class="headerlink" title="查看网络连接是否正常"></a>查看网络连接是否正常</h3><h4 id="查看本机与虚拟机是否连接正常"><a href="#查看本机与虚拟机是否连接正常" class="headerlink" title="查看本机与虚拟机是否连接正常"></a>查看本机与虚拟机是否连接正常</h4><h5 id="本机ping虚拟机"><a href="#本机ping虚拟机" class="headerlink" title="本机ping虚拟机"></a>本机ping虚拟机</h5><p><img src="https://s2.loli.net/2023/02/28/xXiBF67orkazPJT.png"></p><h5 id="虚拟机ping本机"><a href="#虚拟机ping本机" class="headerlink" title="虚拟机ping本机"></a>虚拟机ping本机</h5><p>​ 在本机中打开 cmd ，输入 <code>ipconfig</code> 查看ip设置</p><p><img src="https://s2.loli.net/2023/02/28/NkWh3ay7gKEFXw1.png" alt="image-20230228132503621"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 10.193.4.233</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/28/2XWbu4znayOEQT6.png" alt="image-20230228132838410"></p><p>​以上表示本机与虚拟机连接正常</p><pre><code>#### 2.2.2 虚拟机与远程网络连接</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/28/iRYOpFUJIzm7XAb.png" alt="image-20230228133154328"></p><h3 id="解决网络连接失败方法"><a href="#解决网络连接失败方法" class="headerlink" title="解决网络连接失败方法"></a>解决网络连接失败方法</h3><p>如果 <code>ping www.baidu.com: 未知的名称或服务</code>，说明网络连接有问题。</p><h4 id="检查网络配置文件"><a href="#检查网络配置文件" class="headerlink" title="检查网络配置文件"></a>检查网络配置文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/28/zpA3j96f5qxkmJc.png" alt="image-20230228134612519"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ONBOOT=&quot;yes&quot; #设置开机启动网络</span><br><span class="line">BOOTPROTO=&quot;static&quot; #设置静态IP，这样IP地址不会随着物理机IP地址的改变而改变</span><br><span class="line">IPADDR=192.168.33.123 #IP地址，前3位和GATEWAY一致</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">GATEWAY=192.168.33.2 #设置网关，在虚拟网络编辑器中查看</span><br><span class="line">DNS=8.8.8.8</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/28/AUQHsRIvE2axXr4.png" alt="image-20230228134944158"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart #重启网卡</span><br></pre></td></tr></table></figure><p>此时可能出现以下错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Job for network.service failed because the control process exited with error code. </span><br><span class="line">See &quot;systemctl status network.service&quot; and &quot;journalctl -xe&quot; for details.</span><br></pre></td></tr></table></figure><p>该问题可以参考<a href="https://blog.csdn.net/u012904764/article/details/95883192">https://blog.csdn.net/u012904764/article/details/95883192</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解决方法</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止networkmanager服务</span></span><br><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl disable NetworkManager</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启网卡</span></span><br><span class="line">systemctl restart network</span><br><span class="line">systemctl status network</span><br></pre></td></tr></table></figure><h4 id="配置DNS"><a href="#配置DNS" class="headerlink" title="配置DNS"></a>配置DNS</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/28/urGMtj9l67Hzwgn.png" alt="image-20230228141227466"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加DNS</span><br><span class="line">nameserver 8.8.8.8 #google的DNS</span><br></pre></td></tr></table></figure><p>最后再按照2.1步骤检查一遍，可以联网。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客使用操作记录</title>
      <link href="/2023/02/28/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/02/28/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>进入博客所在目录，右键点击 <code>Git Bash Here</code> ，创建博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;博客使用操作记录&quot;</span><br></pre></td></tr></table></figure><p>然后可以在source&#x2F;_posts内查看新创建的 <code>.md</code>文件，在其中编写即可。</p><p>在 <code>front-matter</code> 内添加 <code>title</code>，<code>date</code>，<code>tags</code>，<code>description</code>，<code>cover</code>等描述文字。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">编辑完成文章后，在git中输入</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在博客所在仓库目录下新建 <code>CNAME</code> 文件，输入域名（如果自定义域名的话）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.cajzella.cn</span><br></pre></td></tr></table></figure><h2 id="ssh-连接-Github"><a href="#ssh-连接-Github" class="headerlink" title="ssh 连接 Github"></a>ssh 连接 Github</h2><p>当 Github中添加本地ssh公钥后，在 git 中输入 <code>ssh -T git@github.io</code> ，发现以下报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kex_exchange_identification: Connection closed by remote host</span><br><span class="line">ssh:connect to host github.com port 22: Connection timed out</span><br></pre></td></tr></table></figure><p><strong>解决方法</strong></p><ul><li>修改 known_hosts，删除known_hosts.old。（原理参考<a href="https://cloud.tencent.com/developer/article/1946906%EF%BC%89">https://cloud.tencent.com/developer/article/1946906）</a></li><li>删除博客目录下原有的 <code>.deploy_git</code> 和 <code>public</code> 文件。</li><li>后者报错<a href="https://blog.csdn.net/yjxkq99/article/details/128927038#:~:text=ssh%3Aconnect%20to%20host%20github.com%20port%2022%3A,Connection%20timed%20out%20%E9%80%9A%E8%BF%87%E6%9F%A5%E9%98%85%E5%90%84%E7%A7%8D%E8%B5%84%E6%96%99%EF%BC%8C%E5%BE%97%E7%9F%A5%E5%8E%9F%E5%9B%A0%E5%8F%AF%E8%83%BD%E6%98%AF%E7%94%B1%E4%BA%8E%E7%94%B5%E8%84%91%E7%9A%84%E9%98%B2%E7%81%AB%E5%A2%99%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E7%BD%91%E7%BB%9C%E5%8E%9F%E5%9B%A0%E5%AF%BC%E8%87%B4%20ssh%E8%BF%9E%E6%8E%A5%20%E6%96%B9%E5%BC%8F%20%E7%AB%AF%E5%8F%A322%E8%A2%AB%E5%B0%81%E9%94%81%E3%80%82">参考</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CO实验总结</title>
      <link href="/2022/12/31/CO%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/31/CO%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><em>这是 CajZella 的学期末的 CO上机回忆录~</em></p><p>​计算机组成原理课程分为理论课和实验课部分。理论课以<strong>MIPS系统</strong>为主要学习对象，讲述计算机硬件系统的组成、各部件的结构及其底层硬件的工作原理。实验课要求自主开发一台以MIPS处理器为核心的功能型计算机。</p><p>​看到此，读者不必担忧。实验课是比较循序渐进的。在大二上学期开学前的两周左右，课程组会开放<a href="http://cscore.buaa.edu.cn/">实验教程</a>（<a href="https://vpn.buaa.edu.cn/portal/?redirect_uri=https://cscore-buaa-edu-cn.vpn.buaa.edu.cn:8118/#!/login">VPN登录方式</a>）以供同学预习。在这期间，读者可以熟悉 <code>Logisim</code> ,  <code>Verilog</code>, <code>MIPS</code> 的环境及编写，完成实验教程对应的例题。当然如果暑假没有预习也不必担心，笔者同样在暑假没有学习相关内容，只是配置了<code>Logisim</code> , <code>ISE</code> , <code>Mars</code>等软件，在开学后会有四周预习时间（2021级），内容即为暑假开放的<code>Pre</code>。在第五周会迎来第一次上机 <code>Pre</code> , 时长为 $2.5h$ , <code>Logisim</code> ,  <code>Verilog</code>, <code>MIPS</code> 各一题，印象中对笔者来说比较难，当时未通过，不过本次上机不通过不会gap一周。接下来会是几乎每周各一次的上机：</p><ul><li><code>P0</code> , <code>P1</code> , <code>P2</code> 分别为  <code>Logisim</code> ,  <code>Verilog</code>, <code>MIPS</code> , 题型和 <code>Pre</code> 差不多；</li><li><code>P3</code> , <code>P4</code> 分别是 <code>Logisim</code> ，<code>Verilog</code> 开发MIPS单周期处理器（<code>P3</code> 开始进入正题）;</li><li><code>P5</code> 是 <code>Verilog</code> 开发单周期流水线CPU （<code>P5</code> 开始不会涉及 <code>Logisim</code>）;</li><li><code>P6</code> 在 <code>P5</code> 的基础上，扩展了乘除指令，需要<strong>模拟乘除模块的执行</strong>；</li><li><code>p7</code> 在 <code>P6</code> 的基础上，实现一个简单的计算机系统——MIPS微系统，需要处理<strong>内部溢出和外部中断</strong>，<strong>与外设交互</strong>；</li><li><code>P8</code> 要求在FPAG上实现系统验证，需要替换不可综合的部分，添加 <code>GPIO</code> , <code>DigitalTube</code> , <code>UART</code> 外设，编写软件实现一些功能。</li></ul><p>​笔者认为CO实验是在涅槃中浴火重生的一场考验，作为进入计算机专业后的第一门专业课，注定是不平凡的。如果缺乏相应知识，仅仅阅读实验教程是难以顺利完成上机的，笔者认为还可借助以下资源：</p><ul><li>理论课的PPT和《数字设计和计算机体系结构》等教科书，对 <code>P3</code> 开始的CPU搭建会有一定帮助。</li><li>学长学姐们的博客和 github repo，会有历届学长学姐们的学习体会、测试数据、注意事项和课上回忆（注意每年题目可能会有变化）。</li><li>请教助教，助教们都非常亲切耐心，遇到问题百思不得其解的时候不要犹豫(＾Ｕ＾)ノ~ＹＯ </li><li>同学间的帮助，尤其是<code>P5</code>开始的流水线CPU，需要自己构造测试数据debug，可能遇到一些隐蔽性极好的bug，集思广益或许可以加快进度 O(∩_∩)O 。祝读者课上不会遇到课下的bug哇~</li></ul><p>​“<strong>于高山之巅，方见大河奔涌；于群峰之上，更觉长风浩荡。</strong>” 这是一门由千千万万BUAA学子实践过的课程，其价值不断被凝练，祝你从中有所收获，更深入理解计算机组成原理。</p><p>​21级老学姐就在此祝大家一路通关啦ヾ(✿ﾟ▽ﾟ)ノ </p>]]></content>
      
      
      
        <tags>
            
            <tag> CO实验 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
